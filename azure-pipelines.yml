# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
  environment: 'd'
  azureSubscriptionEndpoint: vwt-dev Azure subscription
  azureContainerRegistry: vwtdatdevcrg.azurecr.io

trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

steps:
          #- script: gradlew build ; docker build -t $(dockerId)/$(imageName)
- script: |
    cd server
    #./gradlew build
    ./gradlew build -x test
  displayName: Build sally server

- task: Docker@1
  displayName: Build server image
  inputs:
    command: build
    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
    azureContainerRegistry: $(azureContainerRegistry)
    dockerFile: server/Dockerfile
    imageName: zally_server

- task: Docker@1
  displayName: Build web-ui image
  inputs:
    command: build
    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
    azureContainerRegistry: $(azureContainerRegistry)
    dockerFile: server/Dockerfile
    imageName: zally_web-ui_

- task: Docker@1
  displayName: Container registry login
  inputs:
    command: login
    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
    azureContainerRegistry: $(azureContainerRegistry)

- task: Docker@1
  displayName: Push image
  inputs:
    command: push
    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
    azureContainerRegistry: $(azureContainerRegistry)
    imageName: vwtdatdevcrg.azurecr.io/zally_server
    #imageName: $(Build.Repository.Name):$(Build.BuildId)

- task: Docker@1
  displayName: Push image
  inputs:
    command: push
    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
    azureContainerRegistry: $(azureContainerRegistry)
    imageName: vwtdatdevcrg.azurecr.io/zally_web-ui
